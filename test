cmake_minimum_required(VERSION 3.14)
project(fuzzy)

include(ExternalProject)
set(CMAKE_CXX_STANDARD 17)

# Set path to Fuzzylite installation
set(FL_INSTALL_DIR ${CMAKE_SOURCE_DIR}/external/fuzzylite-install)

# Only add ExternalProject if the install directory does not exist
if(NOT EXISTS ${FL_INSTALL_DIR})
    message(STATUS "Fuzzylite not found, downloading and building...")

    ExternalProject_Add(fuzzylite_ep
        GIT_REPOSITORY https://github.com/fuzzylite/fuzzylite.git
        GIT_TAG        master
        UPDATE_COMMAND ""
        CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${FL_INSTALL_DIR}
        INSTALL_DIR ${FL_INSTALL_DIR}
        BUILD_IN_SOURCE 0
    )

    # Ensure your main target waits for this to complete
    set(FUZZYLITE_DEP fuzzylite_ep)
else()
    message(STATUS "Using existing Fuzzylite in ${FL_INSTALL_DIR}")
    set(FUZZYLITE_DEP "")
endif()

# Include and link directories
include_directories(${FL_INSTALL_DIR}/include)
include_directories(${CMAKE_SOURCE_DIR}/incl)
link_directories(${FL_INSTALL_DIR}/lib)

# Add your executable
add_executable(${PROJECT_NAME} 
    src/main.cpp
    src/utils.cpp)

# Link to Fuzzylite
add_dependencies(${PROJECT_NAME} ${FUZZYLITE_DEP})
target_link_libraries(${PROJECT_NAME} fuzzylite)
